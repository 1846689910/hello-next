{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/eriche/Documents/projects/hello-next/pages/post/[postId].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Post = function Post() {\n  var router = useRouter();\n  var slug = router.query.postId;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"index page\"))), \"My Slug is \", slug);\n};\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.postId;\n            _context.next = 3;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            show = _context.sent;\n            console.log(\"Fetched show: \".concat(show.name));\n            return _context.abrupt(\"return\", {\n              show: show\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;","map":{"version":3,"sources":["/Users/eriche/Documents/projects/hello-next/pages/post/[postId].js"],"names":["Link","useRouter","fetch","Post","router","slug","query","postId","getInitialProps","context","id","res","json","show","console","log","name"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADiB,MAEDI,IAFC,GAEQD,MAAM,CAACE,KAFf,CAETC,MAFS;AAGjB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADF,iBAMcF,IANd,CADF;AAUD,CAbD;;AAcAF,IAAI,CAACK,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,EADK,GACED,OAAO,CAACH,KADV,CACbC,MADa;AAAA;AAAA,mBAEHL,KAAK,wCAAiCQ,EAAjC,EAFF;;AAAA;AAEfC,YAAAA,GAFe;AAAA;AAAA,mBAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfC,YAAAA,IAHe;AAKrBC,YAAAA,OAAO,CAACC,GAAR,yBAA6BF,IAAI,CAACG,IAAlC;AALqB,6CAOd;AAAEH,cAAAA,IAAI,EAAJA;AAAF,aAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AASA,eAAeV,IAAf","sourcesContent":["import Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport fetch from \"isomorphic-unfetch\";\nconst Post = () => {\n  const router = useRouter();\n  const { postId: slug } = router.query;\n  return (\n    <div>\n      <div>\n        <Link href=\"/\">\n          <button>index page</button>\n        </Link>\n      </div>\n      My Slug is {slug}\n    </div>\n  );\n};\nPost.getInitialProps = async context => {\n  const { postId: id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  console.log(`Fetched show: ${show.name}`);\n\n  return { show };\n};\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}